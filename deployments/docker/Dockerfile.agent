# Multi-stage build for Cloudless Agent

# Build stage
FROM golang:1.24-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git make ca-certificates

# Set working directory
WORKDIR /build

# Copy go mod files
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Build the agent binary
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build \
    -ldflags="-s -w" \
    -o agent \
    ./cmd/agent

# Runtime stage
FROM alpine:3.18

# Install runtime dependencies including containerd
RUN apk add --no-cache \
    ca-certificates \
    tzdata \
    containerd \
    runc \
    && addgroup -g 1000 cloudless \
    && adduser -D -u 1000 -G cloudless cloudless

# Create required directories
RUN mkdir -p /etc/cloudless/certs \
    && mkdir -p /data/storage \
    && mkdir -p /var/lib/cloudless \
    && mkdir -p /run/containerd \
    && mkdir -p /etc/containerd \
    && chown -R cloudless:cloudless /etc/cloudless /var/lib/cloudless /data

# Copy binary from builder
COPY --from=builder /build/agent /usr/local/bin/agent

# Copy default configuration
COPY config/agent.yaml /etc/cloudless/agent.yaml

# Copy containerd configuration for registry access
COPY deployments/docker/config/containerd.toml /etc/containerd/config.toml

# Copy entrypoint script
COPY deployments/docker/agent-entrypoint.sh /usr/local/bin/agent-entrypoint.sh
RUN chmod +x /usr/local/bin/agent-entrypoint.sh

# Run as root (containerd daemon requires root)
# Agent process will handle privilege dropping if needed
USER root

# Expose ports
# 8090: gRPC API
# 9091: Metrics
# 9092: Health
# 8445: QUIC overlay network
EXPOSE 8090 9091 9092 8445

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=10s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:9092/health || exit 1

# Set working directory
WORKDIR /data

# Run agent via entrypoint script (starts containerd first)
ENTRYPOINT ["/usr/local/bin/agent-entrypoint.sh"]
CMD ["--config", "/etc/cloudless/agent.yaml"]
