server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Docker container logs
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
        filters:
          - name: label
            values: ["com.docker.compose.project=docker"]

    relabel_configs:
      # Extract container name
      - source_labels: ['__meta_docker_container_name']
        regex: '/(.*)'
        target_label: 'container'

      # Extract compose service name
      - source_labels: ['__meta_docker_container_label_com_docker_compose_service']
        target_label: 'compose_service'

      # Add component label based on service name
      - source_labels: ['compose_service']
        regex: 'coordinator'
        target_label: 'component'
        replacement: 'coordinator'

      - source_labels: ['compose_service']
        regex: 'agent-.*'
        target_label: 'component'
        replacement: 'agent'

      - source_labels: ['compose_service']
        regex: '(prometheus|grafana|loki|promtail|jaeger)'
        target_label: 'component'
        replacement: 'observability'

      # Add namespace label
      - replacement: 'cloudless'
        target_label: 'namespace'

    pipeline_stages:
      # Parse JSON logs from coordinator and agents
      - json:
          expressions:
            level: level
            timestamp: ts
            logger: logger
            message: msg

      # Extract level if available
      - labels:
          level:

      # Set timestamp from log entry if available
      - timestamp:
          source: timestamp
          format: RFC3339Nano

      # Output only the message
      - output:
          source: message
